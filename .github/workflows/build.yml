# Copyright (c) 2023 Catppuccin
# Copyright (c) 2015 Andrew Gallant

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

name: build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"
  pull_request:
    paths:
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"

env:
  BINARY: mdbook-catppuccin

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ''
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        build:
          - linux-gnu
          - linux-arm
          - macos
          - win-msvc
        include:
          - build: linux-gnu
            os: ubuntu-22.04
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: linux-arm
            os: ubuntu-22.04
            rust: nightly
            target: arm-unknown-linux-gnueabihf
          - build: macos
            os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
          - build: win-msvc
            os: windows-2022
            rust: nightly
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Packages (Ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends musl-tools

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust }}

      - name: Use Cross
        if: matrix.os != 'windows-2022'
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
          echo "CARGO=cross" >> $GITHUB_ENV
          echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
          echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show Cargo Command
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"
          echo "target dir is: ${{ env.TARGET_DIR }}"

      - name: Compile
        run: ${{ env.CARGO }} build --release --verbose ${{ env.TARGET_FLAGS }}

      - name: Strip Binary (linux and macos)
        if: matrix.build == 'linux-musl' || matrix.build == 'linux-gnu' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/${{ env.BINARY }}"

      - name: Strip Binary (linux-arm)
        if: matrix.build == 'linux-arm'
        run: |
          docker run --rm -v \
            "$PWD/target:/target:Z" \
            rustembedded/cross:arm-unknown-linux-gnueabihf \
            arm-linux-gnueabihf-strip \
            /target/arm-unknown-linux-gnueabihf/release/${{ env.BINARY }}

      - name: Create Artifact
        id: create-artifact
        run: |
          if [ "${{ matrix.os }}" == "windows-2022" ]; then
            echo "name=${{ env.TARGET_DIR }}/release/${{ env.BINARY }}.exe" >> $GITHUB_OUTPUT
          else
            echo "name=${{ env.TARGET_DIR }}/release/${{ env.BINARY }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY }}-${{ matrix.target }}
          path: ${{ steps.create-artifact.outputs.name }}
