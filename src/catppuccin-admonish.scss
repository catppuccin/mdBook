@use "sass:color";
@use "sass:list";
@use "@catppuccin/palette/scss/catppuccin" as catppuccin;

@mixin level($palette, $classes, $color) {
  :is(.admonition):is(#{$classes}) {
    border-color: #{map-get($palette, $color)};
  }
  :is(#{$classes}) > :is(.admonition-title, summary.admonition-title) {
    background-color: #{color.change(map-get($palette, $color), $alpha: 0.2)};
  }
  :is(#{$classes}) > :is(.admonition-title, summary.admonition-title)::before {
    background-color: #{map-get($palette, $color)};
  }
}

$mappings: (
  "yellow": (
    ".admonish-hint",
    ".admonish-important",
    ".admonish-tip",
  ),
  "flamingo": (
    ".admonish-abstract",
    ".admonish-summary",
    ".admonish-tldr",
  ),
  "mauve": (
    ".admonish-example",
  ),
  "sky": (
    ".admonish-info",
    ".admonish-todo",
  ),
  "green": (
    ".admonish-check",
    ".admonish-done",
    ".admonish-success",
  ),
  "blue": (
    ".admonish-note",
  ),
  "peach": (
    ".admonish-attention",
    ".admonish-caution",
    ".admonish-warning",
  ),
  "teal": (
    ".admonish-faq",
    ".admonish-help",
    ".admonish-question",
  ),
  "red": (
    ".admonish-bug",
    ".admonish-danger",
    ".admonish-error",
    ".admonish-fail",
    ".admonish-failure",
    ".admonish-missing",
  ),
  "pink": (
    ".admonish-cite",
    ".admonish-quote",
  ),
);

@mixin main($palette) {
  @each $color, $classes in $mappings {
    @include level($palette, $classes, $color);
  }
}

@each $flavour, $color in catppuccin.$palette {
  .#{$flavour} {
    @include main($color);
  }
}
